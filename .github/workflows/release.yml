name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

# 权限配置
permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      
      - name: Set version variable
        id: set_version
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            # 从TAG设置版本（去掉"v"前缀）
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "RELEASE_TYPE=release" >> $GITHUB_ENV
          else
            # 使用短提交哈希作为版本号
            SHORT_HASH=$(git rev-parse --short HEAD)
            VERSION="dev-$SHORT_HASH"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "RELEASE_TYPE=prerelease" >> $GITHUB_ENV
          fi
      
      - name: Update version in pom.xml
        run: |
          mvn versions:set -DnewVersion=${{ env.VERSION }}
          mvn versions:commit
      
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      
      - name: Create Release
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          files: target/AuthMeForm-${{ env.VERSION }}.jar
          name: AuthMeForm ${{ env.VERSION }}
          tag_name: ${{ (github.ref_name == 'main' || github.ref_name == 'master') && format('build-{0}', github.run_number) || github.ref_name }}
          prerelease: ${{ env.RELEASE_TYPE == 'prerelease' }}
          draft: false
          generate_release_notes: true
          fail_on_unmatched_files: true 